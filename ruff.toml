src = ["src"]
exclude = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
]
line-length = 120
indent-width = 4

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
[format]
quote-style = "single"
indent-style = "space"


[lint]
select = [
    "F",   # flake8: https://docs.astral.sh/ruff/rules/#flake8-f
    "E",   # flake8: https://docs.astral.sh/ruff/rules/#flake8-e
    "I",   # isort: https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade: https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "D",   # pydocstyle: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    # "ANN", # annotations: https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "PTH", # use-pathlib-pth: https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "TRY", # tryceratops
]

ignore = [
  "D100",   # Missing docstring in public module
  "D101",   # Missing docstring in public class
  "D102",   # Missing docstring in public method
  "D103",   # Missing docstring in public function
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D106",   # Missing docstring in nested class
  "D203",   # 1 blank line required before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "TRY003", # Avoid specifying long messages outside the exception
]

[lint.pydocstyle]
convention = "numpy"

[lint.isort]
case-sensitive = true
lines-after-imports = 2